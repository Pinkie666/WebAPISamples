RMAPI version 0.01
==================

The README is used to introduce the module and provide instructions on
how to install the module, any machine dependencies it may have (for
example C compilers and installed libraries) and any other information
that should be provided before the module is installed.

A README file is required for CPAN modules since CPAN extracts the
README file from a module distribution so that people browsing the
archive can use it get an idea of the modules uses. It is usually a
good idea to provide version information here so that people can
decide whether fixes for the module are worth downloading.

INSTALLATION

To install this module type the following:

   perl Makefile.PL
   make
   make test
   make install

DEPENDENCIES

This module requires these other modules and libraries:

perl 5.8.8 or higher
strict
warnings

LWP::UserAgent;
HTTP::Request::Common;
Carp;


COPYRIGHT AND LICENCE

Put the correct copyright and licence information here.

Copyright (C) 2012 by Michael Marshall

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.8 or,
at your option, any later version of Perl 5 you may have available.

USAGE

First, a few comments on the standard format for variable passing.  Since this perl, you can pass any arguments you want to any function without causing an error.  If you don't pass the right information, you won't get the right output.  I have tried to keep a conistsent format for all functions when passing variables.  Here is what is connstant in all functions

1st 3 variables passed to any function are: Account key, user name, password
In functions that require an account ID, that is always the 4th variable.
The Entity Body or request Body (XML) that gets passed in POST and PUT calls is always the last variable.  

You'll notice that some functions require the account key, user, password, account ID, but will then also need a list id, group id, mailing id, data id...
This Uids are always passed after the account id and before the entity body.

All functions will return the XML output from a service call as is.  Some PUT and DELETE calls will not return any repsonse, but the functions are set to return a response so they can also return error output if a call is not completed properly.  

You could execute a call and print the output by doing the following:

$result = RMAPI::get_current_user($account_key, $user, $pass);
print $result;

Here is the basic implementation in a perl script.  This will not display any output or XML response as it will simple run the appropriate function.  See above for displaying and or parsing XML output.

use RMAPI;

&RMAPI::get_current_user($account_key, $user, $pass);
&RMAPI::enumarte_addresses($account_key, $user, $pass, $acct_id);
&RMAPI::create_list($account_key, $user, $pass, $acct_id, $entity_body);
&RMAPI::get_list($account_key, $user, $pass, $acct_id, $list_id);
&RMAPI::opt_out_recipients_from_list($account_key, $user, $pass, $acct_id, $list_id, $entity_body);

These examples should cover all possible variable formats.  Certain functions will require a mailing id in the place of the list id variable or something similar.  You should reference our SDK at http://services.reachmail.net/sdk/ to know what each service call requires as input.   


The file api_test.pl will contain some examples of how to implement, parse and display service call results and can be used as a jumping off point if necessary.  
